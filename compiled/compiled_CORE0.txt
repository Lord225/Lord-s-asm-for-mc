CORE0:
0001  00  00  01000010 |  mov 66, reg[0]
1111  00  00  11101001 |  write reg[0], 233
0001  00  10  11100100 |  mov 228, reg[2]
0001  00  11  00000001 |  mov 1, reg[3]
0000  01  00           |  int 	(LOOP)
1100  10  00           |  read reg[2], reg[0]
1010  11  00  00001111 |  je reg[0], reg[3], ONE
1100  10  01           |  read reg[2], reg[1]
0000  00  10  00010111 |  jmp TWO
1100  10  00           |  read reg[2], reg[0]	(ONE)
0000  00  11  00010011 |  jf SKIP1
0000  01  00           |  int 
1100  10  01           |  read reg[2], reg[1]	(SKIP1)
1100  10  01           |  read reg[2], reg[1]
0000  00  10  00011100 |  jmp NEXT
0000  00  11  00011010 |  jf SKIP2	(TWO)
0000  01  00           |  int 
1100  10  00           |  read reg[2], reg[0]	(SKIP2)
1100  10  00           |  read reg[2], reg[0]
1010  01  00  01010010 |  je reg[0], reg[1], DRAW	(NEXT)
0001  00  11  01001011 |  mov 75, reg[3]
1010  11  00  00101010 |  je reg[0], reg[3], P1_0x4B
0001  00  11  01010000 |  mov 80, reg[3]
1010  11  00  00111110 |  je reg[0], reg[3], P1_0x50
1011  01  00  01000010 |  jg reg[0], reg[1], P2_WIN
0000  00  10  00101110 |  jmp P1_WIN
0001  00  11  01010000 |  mov 80, reg[3]	(P1_0x4B)
1010  11  01  01000010 |  je reg[1], reg[3], P2_WIN
0001  00  00  00000000 |  mov 0, reg[0]	(P1_WIN)
0001  00  11  00000001 |  mov 1, reg[3]
0001  00  01  00000010 |  mov 2, reg[1]
1111  00  11  11100011 |  write reg[3], 227
1111  00  11  11100010 |  write reg[3], 226
1111  00  01  11100011 |  write reg[1], 227
1111  00  00  11100010 |  write reg[0], 226
0000  00  10  00001000 |  jmp LOOP
0001  00  11  01001011 |  mov 75, reg[3]	(P1_0x50)
1010  11  01  00101110 |  je reg[1], reg[3], P1_WIN
0001  00  00  00000000 |  mov 0, reg[0]	(P2_WIN)
0001  00  11  00000001 |  mov 1, reg[3]
0001  00  01  00000010 |  mov 2, reg[1]
1111  00  01  11100011 |  write reg[1], 227
1111  00  11  11100010 |  write reg[3], 226
1111  00  11  11100011 |  write reg[3], 227
1111  00  00  11100010 |  write reg[0], 226
0000  00  10  00001000 |  jmp LOOP
0001  00  00  00000000 |  mov 0, reg[0]	(DRAW)
0001  00  11  00000001 |  mov 1, reg[3]
0001  00  01  00000010 |  mov 2, reg[1]
1111  00  11  11100011 |  write reg[3], 227
1111  00  00  11100010 |  write reg[0], 226
1111  00  01  11100011 |  write reg[1], 227
1111  00  00  11100010 |  write reg[0], 226
0000  00  10  00001000 |  jmp LOOP
