{
    "CPU":
    {
        "Name": "PM-1",
        "Arch": "PM",
        "Author": "Gwiezdny Kartofel",
        "emulator":"pm1_emulator",
        "time_per_cycle":3.3,
        
        "ARGUMENTS":{
            "variants":{
                "short":{
                    "CU":{
                        "size":4
                    },
                    "r2":{
                        "size":2
                    },
                    "r1":{
                        "size":2
                    }
                },
                "long":{
                    "CU":{
                        "size":4
                    },
                    "r2":{
                        "size":2
                    },
                    "r1":{
                        "size":2
                    },
                    "n1":{
                        "size":8
                    }
                },
                "inject":
                {
                    "value":
                    {
                        "size": 8
                    }
                }
            }
        },
        "ADRESSING":
        {
            "mode":"packed",
            "bin_len":8,
            "offset":0
        },

        "DEFINES":[
            "__PM1__"
        ],
        "KEYWORDS":{
            "CORE0":{
                "offset":0,
                "write":0
            }
        },
        "SCHEMATIC":
        {
            "blank":"pm1_blank_rom.schem",
            "high":"minecraft:lapis_block",
            "low":"minecraft:redstone_block",
            "layout": 
            {
                // block
                "offset":[0, 0, 0],
                "stride":[0, 0, 9],
                "size": 16,
                "layout": 
                {
                    // floor 
                    "offset":[0, 0, 0],
                    "stride":[0, 3, 0],
                    "size": 16,
                    "layout":
                    {
                        // word
                        "offset":[14, 0, 0],
                        "stride":[-2, 0, 0],
                        "size": 8,
                        "layout": null
                    }
                }
            }
        },

        "FILL":"err",

        "COMMANDS":{
            "nop":{
                "pattern":"nop",
                "command_layout": "short",
                "bin":{
                    "CU":2,
                    "r1":0,
                    "r2":0
                }
            },
            "inject":{
                "pattern":"inject {stream:num}",
                "command_layout": "inject",
                "bin":{
                    "value":"stream"
                }
            },


            "mov imm reg":{
                "pattern":"reg[{r1:num}] = {n1:num}",
                "command_layout": "long",
                
                "bin":
                {
                    "CU":1,
                    "r2":0,
                    "r1":"r1",
                    "n1":"n1"
                }
            },
            "mov reg reg":{
                "pattern":"reg[{r1:num}] = reg[{r2:num}]",
                "command_layout": "short",
                "bin":
                {
                    "CU":2,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "add reg reg":{
                "pattern":"reg[{r1:num}] += reg[{r2:num}]",
                "command_layout": "short",

                "bin":
                {
                    "CU":3,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "sub reg reg":{
                "pattern":"reg[{r1:num}] -= reg[{r2:num}]",

                "command_layout": "short",

                "bin":
                {
                    "CU":4,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "inc reg reg":{
                "pattern":"reg[{r1:num}] += 1",

                "command_layout": "short",

                "bin":
                {
                    "CU":1,
                    "r1":"r1",
                    "r2":1
                }
            },
            "inc reg reg 2":{
                "pattern":"reg[{r1:num}]++",

                "command_layout": "short",

                "bin":
                {
                    "CU":1,
                    "r1":"r1",
                    "r2":1
                }
            },
            "dec reg reg":{
                "pattern":"reg[{r1:num}] -= 1",
                "command_layout": "short",

                "bin":
                {
                    "CU":1,
                    "r1":"r1",
                    "r2":2
                }
            },
            "dec reg reg 2":{
                "pattern":"reg[{r1:num}]--",
                "command_layout": "short",

                "bin":
                {
                    "CU":1,
                    "r1":"r1",
                    "r2":2
                }
            },
            "rsh reg reg":{
                "pattern":"reg[{r2:num}] = reg[{r1:num}] / 2",
                "command_layout": "short",

                "bin":
                {
                    "CU":5,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "lsh reg reg":{
                "pattern":"reg[{r2:num}] = reg[{r1:num}] * 2",
                "command_layout": "short",

                "bin":
                {
                    "CU":6,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "and reg reg":{
                "pattern":"reg[{r1:num}] &= reg[{r2:num}]",
                "command_layout": "short",

                "bin":
                {
                    "CU":7,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "or reg reg":{
                "pattern":"reg[{r1:num}] |= reg[{r2:num}]",
                "command_layout": "short",

                "bin":
                {
                    "CU":8,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "xor reg reg":{
                "pattern":"reg[{r1:num}] ^= reg[{r2:num}]",
                "command_layout": "short",

                "bin":
                {
                    "CU":9,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "jump equal reg":{
                "pattern":"if reg[{r1:num}] == reg[{r2:num}] jmp {n1:label}",
                "command_layout": "long",

                "bin":
                {
                    "CU":10,
                    "r1":"r1",
                    "r2":"r2",
                    "n1":"n1"
                }
            },
            "jump greater reg":{
                "pattern":"if reg[{r1:num}] > reg[{r2:num}] jmp {n1:label}",
                "command_layout": "long",

                "bin":
                {
                    "CU":11,
                    "r1":"r1",
                    "r2":"r2",
                    "n1":"n1"
                }
            },
            "jump less reg":{
                "pattern":"if reg[{r2:num}] < reg[{r1:num}] jmp {n1:label}",
                "command_layout": "long",

                "bin":
                {
                    "CU":11,
                    "r1":"r1",
                    "r2":"r2",
                    "n1":"n1"
                }
            },
            "jump flag reg":{
                "pattern":"if flag == true jmp {n1:num}",
                "command_layout": "long",

                "bin":
                {
                    "CU":0,
                    "r1":3,
                    "r2":0,
                    "n1":"n1"
                }
            },
            "mov ptr reg":{
                "pattern":"reg[{r1:num}] = ram[reg[{r2:num}]]",
                "command_layout": "short",

                "bin":
                {
                    "CU":12,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "mov ram reg":{
                "pattern":"reg[{r1:num}] = ram[{n1:num}]",
                "command_layout": "long",

                "bin":
                {
                    "CU":13,
                    "r1":"r1",
                    "n1":"n1"
                }
            },
            "mov reg ptr":{
                "pattern":"ram[reg[{r2:num}]] = reg[{r1:num}]",
                "command_layout": "short",

                "bin":
                {
                    "CU":14,
                    "r1":"r1",
                    "r2":"r2"
                }
            },
            "mov reg ram":{
                "pattern":"ram[{n1:num}] = reg[{r1:num}]",
                "command_layout": "long",

                "bin":
                {
                    "CU":15,
                    "r1":"r1",
                    "n1":"n1"
                }
            },
            "shut":{
                "pattern":"shut",
                "command_layout": "short",

                "bin":
                {
                    "CU":0,
                    "r1":1,
                    "r2":0
                }
            },
            "jump":{
                "pattern":"jmp {adress:label}",
                "command_layout": "long",

                "bin":
                {
                    "CU":0,
                    "r1":2,
                    "r2":0,
                    "n1":"adress"
                }
            },
            "call":{
                "pattern":"call {adress:label}",
                "command_layout": "long",
                "bin":
                {
                    "CU":0,
                    "r1":0,
                    "r2":1,
                    "n1":"adress"
                }
            },
            "return":{
                "pattern":"ret",
                "command_layout": "short",
                "bin":
                {
                    "CU":0,
                    "r1":1,
                    "r2":1
                }
            },
            "int":{
                "pattern":"int",
                "command_layout": "short",
                "bin":
                {
                    "CU":0,
                    "r1":0,
                    "r2":1
                }
            },
            "err":{
                "pattern":"err",
                "command_layout": "short",
                "bin":
                {
                    "CU":0,
                    "r1":0,
                    "r2":0
                }
            },
            "cls":
            {
                "pattern":"cls",
                "command_layout":"short",
                "bin":
                {
                    "CU":0,
                    "r1":1,
                    "r2":1
                }
            }
        }
    }
}