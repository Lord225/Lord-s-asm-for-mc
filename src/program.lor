#profile dupa.jsonc

#define STACK_BASE 0
#define ARRAY_SIZE 16

#define SP 14
#define PC 15

.ENTRY
    mov reg[SP], STACK_BASE          // stack init
    mov reg[2], reg[SP]              // array start 
    add reg[SP], reg[SP], ARRAY_SIZE // add 16 elements 
    mov reg[3], reg[SP]              // array end

    call INSERTION_SORT

    halt

INSERTION_SORT:
// reg[2] - [param, Caller]   ptr low  
// reg[3] - [param]           ptr high 
SORT_loop_outer:
    mov reg[1], reg[2]
    sub reg[1], reg[1], 1
    mov reg[4], ram[reg[2]]
SORT_loop_inner:
    mov reg[5], ram[reg[1]]
    sub reg[0], reg[5], reg[4] // reg[0] <= reg[5] -> reg[0]-reg[5] <= 0, sets flag s, c and 
    js SORT_LOOP_break
        add reg[6], reg[1], 1 
        mov ram[reg[6]], reg[5]
        
        // jump if reg[1]-1 < reg[2] -> reg[6] < reg[2] -> reg[6]-reg[2] < 0
        sub reg[6], reg[1], 1
        sub reg[0], reg[6], reg[2]
        js SORT_loop_inner
SORT_LOOP_break:
    add reg[6], reg[1], 1
    mov ram[reg[6]], reg[4]
    add reg[2], reg[2], 1

    // reg[2] != reg[3] -> reg[2]-reg[3] != 0
    sub reg[0], reg[2], reg[3]
    
    jz SORT_loop_outer
    ret