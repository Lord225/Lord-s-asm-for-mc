{
    "CPU TIERS":{
        "TIER0_IMPL":["STD_MOVES","STD_FLOW_CONTROL", "STD_IMPL_ALU"],
        "TIER1_IMPL":["TIER0", "STD_IMPL_IMM_ALU"],
        "TIER2_IMPL":["TIER1", "STD_COND_FLOW_CONTROL"],
        
        "TIER2":["STD_MOVES","STD_FLOW_CONTROL","STD_ALU", "STD_IMM_ALU"],
        "TIER3_SIMPLE":["TIER2", "STD_COND_FLOW_CONTROL"],
        "TIER4_SIMPLE":["TIER3", "EXD_FLOW_CONTROL", "EXD_MOVES"],
        
        "TIER5_TURING" :["TIER4", "STD_INDIRECT"],
        "TIER5_TURING_SIMPLE":["TIER3", "STD_INDIRECT"],
        "TIER5_TURING_IMPL":["TIER2_IMPL","STD_INDIRECT"],
        
        "TIER6":["TIER5_TURING", "EXD_COND_FLOW_CONTROL"],
        "TIER7":["TIER6", "EXD_COND_FLOW_CONTROL", "ADV_ALU"],
        "TIER8_SPEED":["TIER7", "EXD_INDIRECT"],
        
        "TIER9":["TIER8", "STD_FPU"],
        "TIER10_FLOAT":["TIER9_FLOAT","STD_IMM_FPU"],
        "TIER11_VECTOR":["TIER10_FLOAT"]
    },
    "COMMANDS": {
        "STD_MOVES": {
            "DESCRIPTION":"SIMPLE MOVES OPERATIONS",
            "LIST": {
                "mov const reg": {
                    "name": "mov",
                    "args": [
                        {
                            "type": "const"
                        },
                        {
                            "type": "reg"
                        }
                    ]
                },
                "mov reg reg": {
                    "name": "mov",
                    "args": [
                        {
                            "type": "reg"
                        },
                        {
                            "type": "reg"
                        }
                    ]
                }
            }
        },
        "STD_FLOW_CONTROL": {
            "DESCRIPTION":"SIMPLE UNCONDTIONAL JUMP OPERATION",
            "LIST": {
                "uncond jump":{
                    "name":"jmp",    
                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                }
            }
        },

        "STD_IMPL_ALU":{
            "DESCRIPTION":"SIMPLE IN PLACE ALU OPS (ops src, dst)",
            "DEPEND": [
                "STD_MOVES"
            ],
            "or reg reg":{
                "name":"or",

                "args":[
                    {
                        "type":"reg"
                    },
                    {
                        "type":"reg"
                    }
                ]
            },
            "and reg reg":{
                "name":"and",

                "args":[
                    {
                        "type":"reg"
                    },
                    {
                        "type":"reg"
                    }
                ]
            },
            "xor reg reg":{
                "name":"xor",

                "args":[
                    {
                        "type":"reg"
                    },
                    {
                        "type":"reg"
                    }
                ]
            },
            "add reg reg":{
                "name":"add",

                "args":[
                    {
                        "type":"reg"
                    },
                    {
                        "type":"reg"
                    }
                ]
            },
            "sub reg reg":{
                "name":"sub",

                "args":[
                    {
                        "type":"reg"
                    },
                    {
                        "type":"reg"
                    }
                ]
            },
            "rsh reg":{
                "name":"rsh",

                "args":[
                    {
                        "type":"reg"
                    }
                ]
            },
            "lsh reg":{
                "name":"rsh",

                "args":[
                    {
                        "type":"reg"
                    }
                ]
            },
            "cadd reg reg":{
                "name":"cadd",

                "args":[
                    {
                        "type":"reg"
                    },
                    {
                        "type":"reg"
                    }
                ]
            },
            "not reg":{
                "name":"not",

                "args":[
                    {
                        "type":"reg"
                    }
                ]
            }
        },
        "STD_ALU": {
            "DESCRIPTION":"SIMPLE ALU OPS ON REGISTERS",
            "DEPEND": [
                "STD_MOVES"
            ],
            "LIST": {
                "or reg reg":{
                    "name":"or",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "and reg reg":{
                    "name":"and",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "xor reg reg":{
                    "name":"xor",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "add reg reg":{
                    "name":"add",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "sub reg reg":{
                    "name":"sub",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "rsh reg":{
                    "name":"rsh",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "lsh reg":{
                    "name":"rsh",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "not reg":{
                    "name":"not",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "inc reg":{
                    "name":"inc",

                    "args":[
                        {
                            "type":"reg"
                        }
                    ]
                },
                "dec reg":{
                    "name":"dec",

                    "args":[
                        {
                            "type":"reg"
                        }
                    ]
                }
            }
        },
        "STD_IMM_ALU": {
            "DESCRIPTION":"SIMPLE ALU OPS WITH CONST PARAMETERS (ops val_a, src_b, dst)",
            "DEPEND": [
                "STD_ALU"
            ],
            "LIST": {
                "or reg reg":{
                    "name":"or",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "and reg reg":{
                    "name":"and",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "xor reg reg":{
                    "name":"xor",
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "add reg reg":{
                    "name":"add",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "sub reg reg":{
                    "name":"sub",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "rsub reg reg":{
                    "name":"rsub",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                }               
            }
        },
        "EXD_ALU": {
            "DESCRIPTION":"SIMPLE ALU OPS ON REGISTERS",
            "DEPEND": [
                "STD_MOVES"
            ],
            "LIST": {
                "cadd const reg":{
                    "name":"cadd",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "cadd reg reg":{
                    "name":"cadd",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                } 
            }
        },

        "STD_IMPL_IMM_ALU": {
            "DESCRIPTION":"SIMPLE IN PLACE ALU OPS WITH CONST PARAMETERS (ops val_a, dst_b)",
            "DEPEND": [
                "STD_IMPL_ALU"
            ],
            "LIST": {
                "or reg reg":{
                    "name":"or",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "and reg reg":{
                    "name":"and",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "xor reg reg":{
                    "name":"xor",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "add reg reg":{
                    "name":"add",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "sub reg reg":{
                    "name":"sub",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "cadd reg reg":{
                    "name":"cadd",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        }
                    ]
                },
                "inc reg":{
                    "name":"inc",

                    "args":[
                        {
                            "type":"reg"
                        }
                    ]
                },
                "dec reg":{
                    "name":"dec",

                    "args":[
                        {
                            "type":"reg"
                        }
                    ]
                }
            }
        },
        "STD_INDIRECT": {
            "DESCRIPTION":"SIMPLE MEMORY ACESS",
            "DEPEND": [
                "STD_MOVES"
            ],
            "LIST": {
                "mov ptr reg":{
                    "name":"mov",

                    "args":[
                        {
                            "type":"ptr"
                        },
                        {
                            "type":"reg"
                        }
                    ],
                    "parent":"read reg reg"
                },
                "mov const ptr":{
                    "name":"mov",

                    "args":[
                        {
                            "type":"const",
                            "description":"value"
                        },
                        {
                            "type":"ptr",
                            "description":"ptr to write"
                        }
                    ]
                },

                "mov ram reg":{
                    "name":"mov",

                    "args":[
                        {
                            "type":"ram",
                            "description":"ram adress to read"
                        },
                        {
                            "type":"reg",
                            "description":"ptr to write"
                        }
                    ]
                },
                "mov reg ram":{
                    "name":"mov",
                    "args":[
                        {
                            "type":"reg",
                            "description":"register to read"
                        },
                        {
                            "type":"ram",
                            "description":"adress to write"
                        }
                    ]
                },

                "mov const ram":{
                    "name":"mov",

                    "args":[
                        {
                            "type":"const",
                            "description":"value to write"
                        },
                        {
                            "type":"ram",
                            "description":"adress to write"
                        }
                    ]
                }
    
            }
        },
        "STD_COND_FLOW_CONTROL":{
            "DESCRIPTION":"SIMPLE CONDITIONAL JUMPS",
            "DEPEND": [
                "STD_JUMPS"
            ],
            "LIST": {
                "jump equal const":{
                    "name":"je",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump not equal reg":{
                    "name":"je",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },

                "jump not equal const":{
                    "name":"jne",

                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump equal reg":{
                    "name":"jne",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                
                "jump less const":{
                    "name":"jl",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump less reg":{
                    "name":"jl",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },

                "jump less equal const":{
                    "name":"jle",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump less equal reg":{
                    "name":"jle",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump greater const":{
                    "name":"jg",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump greater reg":{
                    "name":"jg",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },

                "jump greater equal const":{
                    "name":"jge",
    
                    "args":[
                        {
                            "type":"const"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump greater equal reg":{
                    "name":"jge",

                    "args":[
                        {
                            "type":"reg"
                        },
                        {
                            "type":"reg"
                        },
                        {
                            "type":"adress"
                        }
                    ]
                },
            }
        },
        "EXD_FLOW_CONTROL": {
            "DESCRIPTION":"EXTENDED UNCONDITIONAL JUMPS, INTERUPTS ECT",
            "DEPEND": [
                "STD_FLOW_CONTROL"
            ],
            "LIST": {
                "call":{
                    "name":"call",

                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                },
                "ret":{
                    "name":"ret",

                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                },
                "int":{
                    "name":"int",

                    "args":[
                        {
                            "type":"const"
                        }
                    ]
                }
            }
        },
        "EXD_COND_FLOW_CONTROL":{
            "DESCRIPTION":"EXTENDED CONDITIONAL JUMPS",
            "DEPEND": [
                "STD_COND_FLOW_CONTROL"
            ],
            "LIST": {
                "jump overflow":{
                    "name":"jo",

                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump not overflow":{
                    "name":"jno",

                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump jump zero":{
                    "name":"jz",

                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                },
                "jump jump not zero":{
                    "name":"jnz",

                    "args":[
                        {
                            "type":"adress"
                        }
                    ]
                }
            }
        },
        "EXD_MOVES": {
            "DESCRIPTION":"EXTENDED MEMORY ACESS",
            "DEPEND": [
                "STD_MOVES"
            ],
            "LIST": {
                "push reg":{
                    "name":"push",

                    "args":[
                        {
                            "type":"reg"
                        }
                    ]
                },
                "push const":{
                    "name":"push",

                    "args":[
                        {
                            "type":"const"
                        }
                    ]
                },
                "pop reg":{
                    "name":"push",

                    "args":[
                        {
                            "type":"reg"
                        }
                    ]
                }
            }
        },
        "EXD_INDIRECT": {
            "DESCRIPTION":"EXTENDED INDIRECT MEMORY ACESS",
            "DEPEND": [
                "STD_INDIRECT"
            ],
            "LIST": {

            }
        },
        "ADV_ALU":{
            "DESCRIPTION":"ADVANCED ALU OPS",

            "LIST": {
                
            }
        },
        "STD_FPU":{
            "DESCRIPTION":"SIMPLE FPU OPS",
            "LIST":{
                "fadd reg reg":{

                },
                "fsub reg reg":{

                }
            }
        },
        "STD_IMM_FPU":{
            "DESCRIPTION":"SIMPLE FPU OPS",
            "LIST":{
                "fadd const reg":{

                },
                "fsub const reg":{
                    
                }
            }
        }
    }
}