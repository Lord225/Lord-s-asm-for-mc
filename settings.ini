SAVE            = bin                                   # [dec, raw, bin, py ] Action to perform 


# General settings
FILE_NAME         = src/example_zcore.lor               # str                            The file to work
COMMENTS          = True
PROFILE_NAME      = None                                # str                            Name of the CPU json profile
OUTPUT_FILE       = compiled/compiled.txt               # str                            Out file name
LOG_INFOO         = None                                # [warnings, errors, both, None] What info should be reported in console
BUILD_OFFSET      = 0                                   # int                            Value to offset binary
SPEED             = -1                                  # int                            Speed of emulation
CONSTS            = None                                # str list                       Addinational to preproces with
SAVE_IN_ONE_FILE  = False                               # bool                           Is supposed to save all binaries into one file?
RAM_DEBUG_MODE    = row                                 # [simple, row, None]            Way to log ram
LOG_COMMAND_MODE  = long                                # [long, short, None]            Way to log commands in console?
USE_FANCY_SYNAX   = True                                # bool                           Use fancy synax in console?



# debug/error handeling
RAISE_ERROR_ON_NOT_IMPLEMENTED_BIN_FORMATING = False      
RAISE_ERROR_ON_NOT_IMPLEMENTED_EMULATOR      = True       
DEBUG_MODE                                   = simple     


# others
USE_DATA_BLOCKS                 = True                  # bool          Resolve #data in file
DEFAULT_PROFILES_PATH           = profiles              # str           Path to profiles folder
G_RISE_ERROR_ON_BAD_RANGES      = False                 # [True, False] If bad range appears, the error will be rised. 
FORCE_COMMANDS_IN_SEPERATE_ROWS = True                  # [True, False] Commands will always be in seperate rows
CHECK_ROM_SIZE                  = -1                    # int           If not -1 compiler will check if program is bigger that hardwere rom
IGNORE_DEBUG_COMMANDS           = False                 # [True, False] If true debug commands will be ignored
IGNORE_EMPTY_PROGRAMS           = True                  # [True, False] If sector is empty, will not be saved.


# app profiling
CPYTHON_PROFILING = False                               # [True, False] 
TIME_MILTIPLAYER  = 0.5                                 # float         
SHOW_RAW_PROGRAM  = False                               # [True, False] 
DEFINITION_DEBUG  = False                               # [True, False] 