{
  "scopeName": "source.iar",
  "name": "IAR",
  "fileTypes": [
    "s",
    "S"
  ],
  "patterns": [
    {
      "match": "([;@]|\\/\\/).*$",
      "name": "comment"
    },
    {
      "match": "\\b\\d+\\b",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(0x)([0-9a-fA-F_]+\\b)",
      "name": "constant.numeric"
    },
    {
      "match": "\\b(0b)([0-1]+\\b)",
      "name": "constant.numeric"
    },


    {
      "match": "\\s*\\w+:",
      "name": "keyword.control.directive.conditional"
    },


    {
      "match": "\\s*(#)(define|ifdef|ifndef|data|macro|endmacro|global|init|profile|debug)",
      "name": "keyword.control"
    },
    {
      "match": "(?:(?<=#ifdef)|(?<=#ifndef)|(?<=#data)|(?<=#macro)|(?<=#endmacro)|(?<=#global)|(?<=#init)|(?<=#profile)|(?<=#debug)\\s)(.*)",
      "name": "variable.named"
    },
    {
      "match": "([A-Z_]+)",
      "name": "entity.name.type"
    },
    {
      "match": "(?:(?<=#define)\\s)([A-Z_]+)",
      "name": "entity.name.type"
    },
    {
      "match": "\\b\\w+\\s*(?=\\[.*\\])",
      "name": "entity.name.tag"
    },
    {
      "match": "\\b\\w+\\b",
      "name": "entity.name.function"
    },
    {
      "match": "\\s*#\\w+\\s+.*",
      "name": "variable.named"
    },



    
    {
      "match": "\"[^\"]+$",
      "name": "invalid.illegal"
    },
    {
      "name": "string.quoted",
      "begin": "\"",
      "end": "\""
    },
    {
      "match": "\\'\\S\\'",
      "name": "string.char"
    }
  ]
}
